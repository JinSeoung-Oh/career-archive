Yolov5s 모델 경량화 및 속도 개선 (2022.03.31 게시) - https://github.com/JinSeoung-Oh/career-archive/blob/main/detail/Yolov5s%20%EB%AA%A8%EB%8D%B8%20%EA%B2%BD%EB%9F%89%ED%99%94%20%EB%B0%8F%20%EC%86%8D%EB%8F%84%20%EA%B0%9C%EC%84%A0%20(2022.03.31%20%EA%B2%8C%EC%8B%9C)
 - Yolov5s 모델을 .onnx 형식으로 변환하여 CPU/GPU 환경 성능 비교. 단일 이미지에서는 ONNX가 빠르지만, 대규모 데이터셋에서는 pt+GPU 모델이 가장 우수함을 확인.
 - SparseML 기반 Pruning + Quantization을 적용했으나 DeepSparse 엔진이 리눅스 전용이라 실용성 한계. 결과적으로 최적화된 원본 Yolov5s GPU 모델이 가장 적합하다는 결론 도출.
--------------------------------------------------------------------------------------------------------------
[Golfzon] 골프 동영상 분류 (2022.04.28 업데이트)
- 약 1,000개 골프 동영상을 대상으로 10가지 조건에 따른 분류 수행.
- Detectron2 기반 size filtering, mmseg 기반 실내/외 구분, mmpose/openpose 기반 crop detection 적용.
- 리소스 한계, 모호한 조건 정의, keypoint detection 오류 등으로 일부 조건(2, 3, 조건부 6, 9, 10)은 필터링 불가 판정.
- 최종적으로 고객 요구사항을 충족하는 전처리 파이프라인 구축 및 검수 효율성 개선.
--------------------------------------------------------------------------------------------------------------
중복 이미지 필터링 (2022.05.04 게시)
- 크롤링 데이터 100만 장을 대상으로 브랜드별 완전 중복 및 유사 이미지(95% 이상) Pair 추출.
- Locality Sensitive Hashing(LSH) 기반 알고리즘 적용.
- 결과물에 대해 검수자들로부터 대체적으로 정확히 추출되었다는 피드백 확인.
--------------------------------------------------------------------------------------------------------------
[Nexon] 율동 영상 전처리 (2022.05.04 ~ 2022.07.19 업데이트)
- 약 1,000개 규모의 율동 영상 데이터를 전처리하여 VGG19 기반 feature 추출, PCA 및 K-means clustering 적용.
- Keypoint 추출(OpenPose), 세그멘테이션(Face/Human parsing) 등을 검토했으나 성능 문제로 제외.
- Nexon 요구사항에 따라 율동 시작/종료 시점 태깅은 ML 지원 불가능으로 판단, 수동 태깅으로 결론.
- 2차 검수 과정에서 keypoint 및 segmentation 오류(손목 좌표 등) 재작업 지원.
- 최종적으로 950명분 변환 완료, 추가 60명분 및 재추출 요청 처리.
--------------------------------------------------------------------------------------------------------------
[흥일기업] 데이터 비식별화 (2022.06.07 ~ 2022.06.10)
- 사람 얼굴 및 자동차 번호판 비식별화를 위한 ML 전처리(PoC) 수행.
- YOLOv5 기반 얼굴 탐지 및 모자이크 처리, EasyOCR 기반 차량 번호판 탐지 적용.
- 얼굴 비식별화는 성공적으로 조정 완료, 번호판 인식은 데이터 크기 문제로 한계.
- 총 3,300만 장 데이터 처리 예상, 클라우드 분산처리 테스트까지 진행했으나 비용 문제로 프로젝트 중단.
--------------------------------------------------------------------------------------------------------------
[아움컴퍼니] 모델 구축 지원 (2022.06.15 업데이트)
- 중장비 인식 모델(YOLOv5 custom) 및 중장비 자격증 OCR 모델(EasyOCR custom) 구축.
- 제한된 데이터셋(300장)으로 인해 정확도는 낮았으나 학습 가능한 형태의 모델 구축 완료.
- EasyOCR custom training 환경 설정 및 학습 파이프라인 구현.
--------------------------------------------------------------------------------------------------------------
[아트샘미술교습소] 원본·결과 데이터 대조 프로젝트 (2022.06.29 ~ 2022.07.07)
- Cropped image가 원본 이미지 상 어디에 위치하는지 bbox 좌표 추출을 지원.
- Multi-scale Template Matching 알고리즘(OpenCV) 적용 및 pairing 모듈 구현 시도.
- 이미지 스케일 불균형 및 1픽셀 단위 연산으로 인한 계산량 폭증 문제 발생 → 일부 케이스는 자동화 불가능, 수동 annotation 방식으로 전환.
--------------------------------------------------------------------------------------------------------------
OCR 개발 현황 (EasyOCR 기반 파이프라인 구축)
- 기간: 2024.02–04
- 엔진 교체: PaddleOCR → EasyOCR(ko+en)
  -1. 속도 2–3배 향상, 정확도 차이 미미
  -2. 한자 인식률은 두 엔진 모두 저조(원인 분석 중)
- 전처리 파이프라인 구성(오픈웨이트 사용, 비파인튜닝):
  -1. Layout Detection: MS DiT (텍스트/타이틀/리스트/테이블/그림)
  -2. Table → Markdown: table detection(hf 모델) + img2table
  -3. 수식 → LaTeX: Pix2Text(검출) + RapidLaTeXOCR
  -4. 띄어쓰기 보정: PyKoSpacing
- 한계/이슈:
  -1. DiT: 논문형(two-column) 강점, 일반 문서/3컬럼 이상/각주·캡션 분리 취약, 레이아웃 순서 무작위
  -2. Table: 복잡 테이블/다중 테이블에서 검출·추출 불완전
  -3. 수식 검출: 논문 외(예: 수능형) 탐지 어려움, 해상도에 따라 LaTeX 품질 변동
- 개선: RAGFlow의 Deep Document Understanding 중 Layout Detection을 모듈화하여 대체 실험
  -1. 논문 외 포맷에서 DiT 대비 세분화/성능 개선 확인(단, 멀티 테이블 누락·중복 분류·Figure 과다/박싱 헐거움 등 제약 존재)
- API(작업자 크롭 가정): FastAPI + Pydantic, JSON 반환
  -1. EasyOCR API, Math API(LaTeX OCR), Table API(img2table)
--------------------------------------------------------------------------------------------------------------
[유안타] 실시간 뉴스 요약 및 챗봇 개발 (2024.07 ~ 2024.11)
- 실시간 뉴스 요약을 위한 LLM 모델 테스트 및 선정, 요약 에이전트 프롬프트 설계
- 사용자 쿼리의 정책 위반 여부를 판별하는 보안 에이전트(Prompt Protector) 설계 → 민감 정보 요청 자동 차단
- 다중 Retrieval 파이프라인 중 최적 함수를 선택하는 Routing Agent 구현 → 검색 정확도 및 응답 효율성 향상
- LLM 응답의 사실성 검증을 위한 Hallucination Detector 설계 → 신뢰도 평가 자동화
- 최종 응답을 생성하는 GenAI Agent 프롬프트 작성 → 안정적이고 일관된 대화 품질 확보
- 다양한 시나리오를 다루기 위하여 비슷한 의도를 가진 query 증강 → 다양한 시나리오에 대한 시스템 테스트 셋 확보
--------------------------------------------------------------------------------------------------------------
