1. 개요
   -1. Claude-3.5-Sonnet 기반 LLM을 활용하여 영어 수학 문제를 한국어로 번역
   -2. 수식(LaTeX) 보존과 출력 스키마 표준화 중심으로 파이프라인 설계

2. 주요 역할
   -1. 번역 프롬프트 설계 및 배치 파이프라인 운영
   -2. 산출 스키마(step1_question/solution/answer) 통일
   -3. JSON 파싱 오류, 중복 인덱스, 불필요 키 생성 문제에 대한 후처리 로직 구현
   -4. 대용량 입력 실패 건 분리·재처리, 속도 최적화

3. 배치 번역 및 품질 검증
   -1. 약 4만 건 이상 데이터를 4차에 걸쳐 번역. (1차~2차 완료, 3차: 9/30–10/25, 4차: 10/25–11/18)
   -2. Claude-3.5-Sonnet으로 메인 번역을 수행하고, GPT-4o-mini를 보조로 활용해 valid 체크 진행.

4. 후처리 및 오류 대응
   -1. LLM 번역 시 빈번히 발생하는 오류 유형 대응:
       -1) LaTeX 수식 손상 → 후처리에서 누락된 수식 요소 보완.
       -2) 불필요 문구 삽입(예: “다음은 번역한 결과입니다”) → 필터링 로직으로 제거.
       -3) JSON 포맷 오류 → 예외처리 코드 재작성, 무한 루프 위험 방지.
       -4) 중복 index → 별도 리스트 관리 및 재처리.
   -2. 대용량 입력 시 무한 오류 발생 → 건별 분리·재시도 후 최종 합산.

5. 검증 및 산출물 관리
   -1. LaTeX 문법 검사 절차를 최종 단계에서 수행.
   -2. 각 index별 JSON 파일로 우선 저장 후, 납품 시 통합 JSONL로 병합.

6. 성과
   -1. 프로젝트 일정(8월~11월) 내 모든 차수 데이터 납품 완료.
   -2. 번역 품질 안정화: 수학적 풀이 과정이 원문과 동일하게 재현됨을 확인.
   -3. 고객 요청 사항(불필요 key 제거, JSON 일관성 유지, LaTeX 보존) 100% 반영.
   -4. 대량 번역 처리 속도 최적화 → 모델 응답 지연 최소화.

7. 한계 및 개선점
   -1. 여전히 LLM 환각으로 인한 불필요 텍스트 삽입 가능성이 완전히 제거되지는 않음.
   -2. LaTeX 표현은 후처리 검증에 의존 → 모델 자체 수준에서의 안정성 개선 필요.
   -3. 대용량 배치 입력 시 일부 실패 건 발생 → 효율적 리트라이 전략 보강 필요.
